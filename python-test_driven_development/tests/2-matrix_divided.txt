2-matrix_divided

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

#Correct format Lists
>>> matrix_1 = [[2, 4, 6], [8, 10, 12], [14, 16, 18]]
>>> matrix_2 = [[10, 20, 30], [40, 50, 60]]

#Incorrect format List
>>> noneVal = None
>>> empty_list = []
>>> empty_lists = [[], [], []]
>>> not_list = [[1,2], 55, 2]
>>> not_all_num = [[1, 2, "a"], [3, 4, 5], [6, 7, 8]]
>>> diff_len = [[1, 2, 3], [1], [1, 2]]

#Correct Attemps
>>> print(matrix_divided(matrix_1, 2))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]

>>> print(matrix_divided(matrix_2, 5))
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

#Incorrect Attemps
>>> matrix_divided(noneVal, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_list, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_lists, 2)
[[], [], []]

>>> matrix_divided(not_list, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(not_all_num, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided(matrix_1, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(diff_len, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided(matrix_1, "q"))
Traceback (most recent call last):
TypeError: div must be a number

